package model;

import java.sql.CallableStatement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

public class CouDAO {
	
	//강좌 정보
	public CouVO read(String lcode) {
		CouVO vo = new CouVO();
		try {
			String sql = "select * from cou where lcode = ?";
			PreparedStatement ps = Database.CON.prepareStatement(sql);
			ps.setString(1, lcode);
			ResultSet rs = ps.executeQuery();
			if(rs.next()) {
				vo.setLcode(rs.getString("lcode"));
				vo.setLname(rs.getString("lname"));
				vo.setDept(rs.getString("dept"));
				vo.setTitle(rs.getString("title"));
				vo.setSalary(rs.getInt("salary"));
				String hiredate = sdf2.format(rs.getDate("hiredate"));
				vo.setHiredate(hiredate);
			}
		} catch (Exception e) {
			System.out.println("교수정보 : " + e.toString());
		}
		return vo;
	} 
	
	//강좌 목록
	public JSONObject list(SqlVO vo) {
		JSONObject object = new JSONObject();
		try {
			String sql = "call list('cou',?,?,?,?,?,?)";
			CallableStatement cs = Database.CON.prepareCall(sql);
			cs.setString(1, vo.getKey());
			cs.setString(2, vo.getWord());
			cs.setString(3, vo.getOrder());
			cs.setString(4, vo.getDesc());
			cs.setInt(5, vo.getPage());
			cs.setInt(6, vo.getPer());
			cs.execute();
			
			ResultSet rs = cs.getResultSet();
			JSONArray jArray = new JSONArray();
			while(rs.next()) {
				JSONObject obj = new JSONObject();
				obj.put("lcode", rs.getString("lcode"));
				obj.put("lname", rs.getString("lname"));
				obj.put("hours", rs.getString("hours"));
				obj.put("room", rs.getString("room"));
				obj.put("instructor", rs.getString("instructor"));
				obj.put("capacity", rs.getInt("capacity"));
				obj.put("persons", rs.getInt("persons"));
				obj.put("pname", rs.getString("pname"));
				obj.put("dept", rs.getString("dept"));
			
				jArray.add(obj);
			}
			object.put("array", jArray);
			
			cs.getMoreResults();
			rs = cs.getResultSet();
			
			int total = 0;
			
			if(rs.next()) {
				total = rs.getInt("total");
			}
			
			int last = total%vo.getPer() == 0? total/vo.getPer() : total/vo.getPer() + 1;
			
			object.put("total", total);
			object.put("last", last);
			
		} catch(Exception e) {
			System.out.println("강좌목록 : " + e.toString());
		}
		
		return object;
	}
}
